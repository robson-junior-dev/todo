entity Collaborator {
  name String required minlength(1) maxlength(255) pattern(/(\D+)/)
  dateOfBirth LocalDate
  photo ImageBlob
  document Blob
  cpf String
  isLeader Boolean
}
entity Project {
  name String required minlength(1) maxlength(255)
  description String minlength(1) maxlength(2000)
}
entity Sprint {
  number String required minlength(1) maxlength(10)
  status SprintStatus required
}
entity Task {
  name String required minlength(1) maxlength(255)
  description String minlength(1) maxlength(2000)
  status TaskStatus required
  hoursToComplete Long min(0)
  attachment Blob
  image ImageBlob
}

relationship OneToOne {
  Collaborator{user(login) required} to User
}
relationship ManyToOne {
  Collaborator{leader(name)} to Collaborator
  Sprint{project(name) required} to Project
  Task{sprint(number) required} to Sprint
  Task{collaborator(name)} to Collaborator
}
relationship ManyToMany {
  Project{collaborator(name)} to Collaborator{project(name)}
}

enum SprintStatus {
    IN_PLANNING, IN_PROGRESS, FINISHED
}
enum TaskStatus {
    TO_DO, IN_PROGRESS, FINISHED
}

paginate Collaborator, Project, Sprint, Task with pagination
service Collaborator, Project, Sprint, Task with serviceClass
filter Collaborator, Project, Sprint, Task
